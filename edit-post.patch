diff --git a/frontend-communityfirst/src/component/card/Card.js b/frontend-communityfirst/src/component/card/Card.js
index b481532..34a75f6 100644
--- a/frontend-communityfirst/src/component/card/Card.js
+++ b/frontend-communityfirst/src/component/card/Card.js
@@ -10,13 +10,21 @@ function Card(props) {
     const handleClose = () => setShow(false);
     const handleShow = () => setShow(true);
 
-    let btn = null;
-    if (props.showDelete){
-        btn = (<Button type="button" className="close" variant="primary" onClick={handleShow} aria-label="Close">
+    let deleteBtn = null;
+    if (props.showDelete) {
+        deleteBtn = (<Button type="button" className="close" variant="primary" onClick={handleShow} aria-label="Close">
             <span aria-hidden="true">&times;</span>
         </Button>)
     }
 
+    let editBtn = null;
+    if (props.showEdit) {
+        editBtn = (<Button type="button" className="close" variant="primary"
+                           onClick={() => props.onEdit(props.id, props.title, props.description)} aria-label="Close">
+            <span aria-hidden="true">Edit</span>
+        </Button>)
+    }
+
     const modal = (
         <Modal show={show} onHide={handleClose}>
             <Modal.Header closeButton>
@@ -24,8 +32,11 @@ function Card(props) {
             </Modal.Header>
             <Modal.Body>Are you sure you want to delete this item?</Modal.Body>
             <Modal.Footer>
-                <Button className="btn btn-danger" variant="primary" onClick={() => {props.onDelete(props.id) ; handleClose(); }} >Delete</Button>
-                <Button variant="secondary" onClick={handleClose} >Close</Button>
+                <Button className="btn btn-danger" variant="primary" onClick={() => {
+                    props.onDelete(props.id);
+                    handleClose();
+                }}>Delete</Button>
+                <Button variant="secondary" onClick={handleClose}>Close</Button>
             </Modal.Footer>
         </Modal>
     )
@@ -69,8 +80,9 @@ function Card(props) {
                                 style={{"fontSize": "14px"}}>{props.title}</h5>
                             <p className="m-0" style={{"fontSize": "14px"}}>{props.description}</p>
                         </div>
-                        <div className = "col-sm">
-                            {btn}
+                        <div className="col-sm">
+                            {deleteBtn}
+                            {editBtn}
                         </div>
                     </div>
                     {modal}
diff --git a/frontend-communityfirst/src/component/post/MyPost.js b/frontend-communityfirst/src/component/post/MyPost.js
index bf88ecc..9cb2e47 100644
--- a/frontend-communityfirst/src/component/post/MyPost.js
+++ b/frontend-communityfirst/src/component/post/MyPost.js
@@ -4,11 +4,11 @@ import {assistanceType} from "./PostCreation";
 import PostApi from "../../api/PostApi";
 import Auth from "../../services/Auth";
 import Card from "../card/Card";
-import {Spinner} from "react-bootstrap";
-import {AxiosInstance as axios} from "axios";
+import {Button, Form, Modal, Spinner} from "react-bootstrap";
+import {useForm} from "react-hook-form";
 
 function MyPost() {
-
+    
     let [services, setServices] = useState([]);
     const [requestedChecked, setRequestedChecked] = useState(true);
     const [offeredChecked, setOfferedChecked] = useState(true);
@@ -16,6 +16,13 @@ function MyPost() {
     const toggleRequested = (checked) => setRequestedChecked(checked);
     const toggleOffered = (checked) => setOfferedChecked(checked);
 
+    //EditModel state
+    const {register: registerEditForm, handleSubmit: handleEditFormSubmit, errors: errorsEditFrom} = useForm();
+    const [showEditModel, setShowEditModel] = useState(false);
+
+    const [postId, setPostId] = useState(-1);
+    const [title, setTitle] = useState("");
+    const [description, setDescription] = useState("");
 
     useEffect(() => {
         getMyPost(getFilter())
@@ -53,35 +60,78 @@ function MyPost() {
     }
 
     const deletePostHandler = async (postId) => {
-       try {
-           await PostApi.deletePost(postId);
-           getMyPost(getFilter());
-       }  catch (e) {
+        try {
+            await PostApi.deletePost(postId);
+            getMyPost(getFilter());
+        } catch (e) {
 
-       }
+        }
     }
 
-     const updatePostHandler = async (postId, updatedBody) => {
-        // setServices(services.filter(services => services.id !== id));
-        console.log("hello")
-
-      /*  try {
-            let updatedPost = {};
-            updatedPost.id = postId;
-            updatedPost.body = updatedBody;
-
-            const response = await PostApi.updatePost(updatedPost);
-            const post = response.data;
-
-            const newPosts = setServices(services.filter(p => p.id !== postId).concat(post));
-
-            setServices = newPosts;
+    const updatePostHandler = async (requestBody) => {
+        try {
+            await PostApi.updatePost(requestBody);
+            getMyPost(getFilter());
         } catch (e) {
-            console.error(e);
-        }*/
+        }
+    }
 
+    const openEditModel =  (postId, title, description) => {
+        //open model and set data to form
+        setShowEditModel(true);
+        setPostId(postId);
+        setTitle(title);
+        setDescription(description);
     }
 
+    const resetEditForm = () => {
+        setPostId(-1);
+        setTitle("");
+        setDescription("");
+    }
+
+    const editModel = (
+        <Modal show={showEditModel} onHide={() => setShowEditModel(false)}>
+            <Modal.Header closeButton>
+                <Modal.Title className="w-100">
+                    <h5 className="text-center">Edit Post</h5>
+                </Modal.Title>
+            </Modal.Header>
+            <Form onSubmit={handleEditFormSubmit((data) => {
+                updatePostHandler(data);
+                resetEditForm();
+                setShowEditModel(false);
+            })}>
+                <Modal.Body>
+                    <Form.Control type="hidden" name="id" value={postId} ref={registerEditForm}></Form.Control>
+                    <Form.Group>
+                        <Form.Control type="text" name="title" placeholder="Title"
+                                      ref={registerEditForm({required: true, minLength: 5, maxLength: 70})}
+                                      defaultValue={title}/>
+                        {errorsEditFrom.title && errorsEditFrom.title.type === "required" &&
+                        <span className="form-error">Title is required</span>}
+                        {errorsEditFrom.title && (errorsEditFrom.title.type === "minLength" || errorsEditFrom.title.type === "maxLength") &&
+                        <span className="form-error">Character must be between 5 and 50 </span>}
+                    </Form.Group>
+                    <Form.Group>
+                        <Form.Control as="textarea" name="description" placeholder="Write something..."
+                                      style={{resize: "none"}} rows="6"
+                                      ref={registerEditForm({required: true})} defaultValue={description}/>
+                        {errorsEditFrom.description && errorsEditFrom.description.type === "required" &&
+                        <span className="form-error">Description is required</span>}
+                    </Form.Group>
+                </Modal.Body>
+                <Modal.Footer>
+                    <Button type="reset" variant="secondary" onClick={() => {
+                        resetEditForm();
+                        setShowEditModel(false);
+                    }}>Cancel</Button>
+                    <Button type="submit" variant="primary">Update</Button>
+                </Modal.Footer>
+            </Form>
+        </Modal>
+    );
+
 
     return (
         <>
@@ -89,13 +139,14 @@ function MyPost() {
                      onOfferedCheckBoxClick={toggleOffered}/>
             <div className="row justify-content-center">
                 <div className="col-10">
-                    {loading && <Spinner animation="border" role="status" style={{width: "7rem", height: "7rem"}} className="d-block mx-auto test">
+                    {loading && <Spinner animation="border" role="status" style={{width: "7rem", height: "7rem"}}
+                                         className="d-block mx-auto test">
                         <span className="sr-only">Loading...</span>
                     </Spinner>}
 
                     {services.map((service, index) =>
                         <Card key={service.id}
-                              id = {service.id}
+                              id={service.id}
                               title={service.title}
                               description={service.description}
                               serviceType={service.assistanceType}
@@ -104,14 +155,16 @@ function MyPost() {
                               email={service.email}
                               firstname={service.firstname}
                               lastname={service.lastname}
-                              index = {service.index}
-                              onDelete = {deletePostHandler}
+                              index={service.index}
+                              onDelete={deletePostHandler}
+                              onEdit={openEditModel}
                               showDelete={true}
-                              //onUpdate = {updatePostHandler}
+                              showEdit={true}
                         />
                     )}
                 </div>
             </div>
+            {editModel}
         </>
     );
 }
diff --git a/src/main/java/se/sda/communityfirst/service/AssistanceRepository.java b/src/main/java/se/sda/communityfirst/service/AssistanceRepository.java
index 314ba35..ff15595 100644
--- a/src/main/java/se/sda/communityfirst/service/AssistanceRepository.java
+++ b/src/main/java/se/sda/communityfirst/service/AssistanceRepository.java
@@ -7,5 +7,5 @@ import java.util.List;
 
 public interface AssistanceRepository extends JpaRepository<Assistance, Long> {
     List<Assistance> findAllByCommunityIdAndAssistanceTypeInOrderByPostedDateDesc(Long communityId, Collection<AssistanceType> assistanceTypes);
-    List<Assistance> findAllByUserIdAndAssistanceTypeInOrderByPostedDateDesc(Long userId, Collection<AssistanceType> assistanceTypes);
+    List<Assistance>    findAllByUserIdAndAssistanceTypeInOrderByIdAscPostedDateDesc(Long userId, Collection<AssistanceType> assistanceTypes);
 }
diff --git a/src/main/java/se/sda/communityfirst/service/AssistanceService.java b/src/main/java/se/sda/communityfirst/service/AssistanceService.java
index bdc404c..253a38a 100644
--- a/src/main/java/se/sda/communityfirst/service/AssistanceService.java
+++ b/src/main/java/se/sda/communityfirst/service/AssistanceService.java
@@ -73,7 +73,7 @@ public class AssistanceService {
 
     @Transactional
     public List<AssistanceDTO> findAllByUserIdOrderByPostedDateDesc(Long userId, List<AssistanceType> assistanceTypes) {
-        return assistanceRepository.findAllByUserIdAndAssistanceTypeInOrderByPostedDateDesc(userId, assistanceTypes).stream().map(assistance ->
+        return assistanceRepository.findAllByUserIdAndAssistanceTypeInOrderByIdAscPostedDateDesc(userId, assistanceTypes).stream().map(assistance ->
                 assistanceToDTO.convert(assistance)).collect(Collectors.toList());
     }
 
